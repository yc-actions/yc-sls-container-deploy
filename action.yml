name: 'YC Serverless Container Deploy'
description: 'GitHub Action to deploy Serverless Container to Yandex Cloud'
author: 'Nikolay Matrosov'
inputs:
  yc-sa-json-credentials:
    required: false
    description: 'JSON containing authorized key for Service Account.
      Either this or `yc-iam-token` or `yc-sa-id` should be provided.
      More info https://cloud.yandex.ru/docs/container-registry/operations/authentication#sa-json'
  yc-iam-token:
    required: false
    description: 'IAM token for Yandex Cloud. 
      Either this or `yc-sa-json-credentials` or `yc-sa-id` should be provided.
      More info https://yandex.cloud/ru/docs/iam/concepts/authorization/iam-token'
  yc-sa-id:
    required: false
    description: 'Service Account ID. Will be uses to exchange GitHub token to Yandex Cloud token.
      Either this or `yc-iam-token` or `yc-sa-json-credentials` should be provided.
      More info https://yandex.cloud/ru/docs/iam/concepts/workload-identity'
  container-name:
    required: true
    description: 'Container name'
  folder-id:
    required: true
    description: 'Folder ID'
  public:
    required: false
    description: 'Make container publicly available. Any user will be able to invoke a container without providing the authorization header'
  revision-service-account-id:
    required: false
    description: 'Id of service account that will be used to pull images to be deployed. Can be omitted if container registry has public access'
  revision-cores:
    required: false
    description: 'Number of Cores'
    default: '1'
  revision-memory:
    required: false
    description: 'Memory. Format: `\\d(Mb|Gb)`. E.g. 128Mb'
    default: '128Mb'
  revision-core-fraction:
    required: false
    description: 'Core fraction'
    default: '100'
  revision-concurrency:
    required: false
    description: 'Number of concurrently handled requests. 1-16'
    default: '1'
  revision-image-url:
    required: true
    description: 'Url of the docker image'
  revision-execution-timeout:
    required: false
    description: 'Request execution timeout in seconds'
    default: '3'
  revision-working-dir:
    required: false
    description: 'Working directory inside container'
  revision-commands:
    required: false
    description: 'Command'
  revision-args:
    required: false
    description: 'Arguments'
  revision-env:
    required: false
    description: 'Environment variables. Multiline. Format: VARIABLE=value'
  revision-secrets:
    description: 'Lockbox secrets. Pattern: "<environmentVariable>=<secretId>/<versionId>/<secretKey>". Multiline'
    default: ''
    required: false
  revision-provisioned:
    required: false
    description: 'Minimum count of provisioned instances'
  revision-network-id:
    required: false
    description: 'Network id that will be attached to revision'
  revision-log-options-disabled:
    required: false
    description: 'Is logging from container disabled. Possible values: "true", "false"'
    default: 'false'
  revision-log-options-log-group-id:
    required: false
    description: 'Log group ID'
  revision-log-options-folder-id:
    required: false
    description: 'Folder ID'
  revision-log-options-min-level:
    required: false
    description: 'Minimum log entry level. (level_unspecified, trace, debug, info, warn, error, fatal)'
    default: 'level_unspecified'
  revision-storage-mounts:
    description: 'Storage mounts. Pattern: "S3_PATH:MOUNT_PATH:ACCESS_MODE" or "S3_PATH:MOUNT_PATH". Multiline.
      S3_PATH Pattern: "bucketId/bucketFolder" or "bucketId". bucketFolder can be empty to mount all bucket.
      ACCESS_MODE is optional parameter. Possible values: "read-only", "ro", "readOnly", "read_only", "ReadOnly", "read-write", "rw", "readWrite", "read_write", "ReadWrite". Default value - "read-only"'
    required: false
outputs:
  rev:
    description: 'Id of created revision'
  id:
    description: 'Id of serverless container'
branding:
  color: blue
  icon: upload-cloud
runs:
  using: 'node24'
  main: 'dist/index.js'
